#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build PR

on:
  pull_request:
    branches:
      - master
      - camel-master
      - quarkus-master
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE.txt'
      - 'NOTICE.txt'

env:
  LANG: en_US

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Setup apache-snapshots profile
        if: github.base_ref == 'camel-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Papache-snapshots'
      - name: Setup oss-snapshots profile
        if: github.base_ref == 'quarkus-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Poss-snapshots'
      - name: Build Quarkus
        if: github.base_ref == 'quarkus-master'
        run: |
          git clone --depth 1 --branch master https://github.com/quarkusio/quarkus.git \
            && cd quarkus \
            && echo "Current Quarkus commit:" $(git rev-parse HEAD) \
            && ./mvnw -B clean install -DskipTests -DskipITs
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: joschi/setup-jdk@v1
        with:
          java-version: 11
      - name: Build Project
        run: |
          ./mvnw -V -ntp ${BRANCH_OPTIONS} \
            clean install
      - name: Save Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            maven-${{ github.run_id }}-${{ github.run_number }}
  build-alternative-jvm:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        java: [ '8' , '12' ]
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Setup apache-snapshots profile
        if: github.base_ref == 'camel-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Papache-snapshots'
      - name: Setup oss-snapshots profile
        if: github.base_ref == 'quarkus-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Poss-snapshots'
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: joschi/setup-jdk@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Restore Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            maven-${{ github.run_id }}-${{ github.run_number }}
      - name: Build on ${{ matrix.java }}
        run: |
          ./mvnw -V -ntp ${BRANCH_OPTIONS} \
            clean verify
  native-tests:
    name: Native Tests - ${{matrix.category}}
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        category: [Core, Foundation, Platform, Messaging, Dataformats, Networking, SQL, Cloud, Misc, SAAS, Social, Validation, Memoryhog Dozer, Memoryhog Dataformat JSON, Memoryhog Infinispan, Memoryhog Olingo4, Memoryhog XML]
        include:
          - category: Cloud
            test-modules: >
              aws
              aws2
              azure
              consul
          - category: Core
            test-modules: >
              core
              core-impl
              core-main
              core-main-caffeine-lrucache
              core-main-collector
              core-main-xml-io
              core-main-xml-jaxb
          - category: Dataformats
            test-modules: >
              base64
              bindy
              csv
              dataformat
              jaxb
              xstream
              soap
          - category: Foundation
            test-modules: >
              bean
              controlbus
              exec
              file
              hystrix
              jsonpath
              quartz
              scheduler
              seda
              send-dynamic-http
              ref
          - category: Memoryhog Dataformat JSON
            test-modules: >
              dataformats-json
          - category: Memoryhog Dozer
            test-modules: >
              dozer
          - category: Memoryhog Infinispan
            test-modules: >
              infinispan
          - category: Memoryhog Olingo4
            test-modules: >
              olingo4
          - category: Memoryhog XML
            test-modules: >
              xml
              rest-binding-mode-xml
          - category: Messaging
            test-modules: >
              activemq
              amqp
              kafka
              messaging
          - category: Misc
            test-modules: >
              braintree
              compression
              graphql
              mustache
              pdf
              qute
              stream
              tarfile
          - category: Networking
            test-modules: >
              ftp
              http
              mail
              netty
              servlet
              websocket-jsr356
          - category: Platform
            test-modules: >
              microprofile
              opentracing
              platform-http
              platform-http-engine
              reactive-streams
          - category: SAAS
            test-modules: >
              box
              github
              google
              jira
              salesforce
              sap-netweaver
              servicenow
              slack
          - category: SQL
            test-modules: >
              couchdb
              influxdb
              jdbc
              mongodb
              sql
          - category: Social
            test-modules: >
              telegram
              twitter
          - category: Validation
            test-modules: >
              bean-validator
              validator
    steps:
      - name: Setup apache-snapshots profile
        if: github.base_ref == 'camel-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Papache-snapshots'
      - name: Setup oss-snapshots profile
        if: github.base_ref == 'quarkus-master'
        run: |
          echo '::set-env name=BRANCH_OPTIONS::-Poss-snapshots'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: joschi/setup-jdk@v1
        with:
          java-version: 11
      - name: Restore Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-${{ github.run_id }}-${{ github.run_number }}
          restore-keys: |
            maven-${{ github.run_id }}-${{ github.run_number }}
      - name: Integration Tests
        env:
          TEST_MODULES: ${{matrix.test-modules}}
        run: |
          for i in $TEST_MODULES
          do modules+=("integration-tests/$i"); done
          IFS=,
          eval ./mvnw -V -ntp ${BRANCH_OPTIONS} clean verify \
            -Dnative \
            -Ddocker \
            -pl "${modules[*]}"

  # memoryhogs:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Set Up Java
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.8
  #     - name: Restore Cache
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.m2/repository
  #         key: maven-${{ github.run_id }}-${{ github.run_number }}
  #         restore-keys: |
  #           maven-${{ github.run_id }}-${{ github.run_number }}
  #     # run the :camel-quarkus-integration-test-fhir as standalone process
  #     # as it building the native image including camel-fhir requires lot
  #     # of memory this we nee to limit it to avoid the process fail for OOM.
  #     - name: Integration Tests
  #       run: |
  #         ./mvnw -V -B \
  #           -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \
  #           -Dnative \
  #           -Ddocker \
  #           -DskipTests \
  #           -Dnative-image.xmx=5g \
  #           -pl :camel-quarkus-integration-test-fhir
